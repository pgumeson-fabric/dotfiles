#! /usr/bin/env zsh

{{ template "printers.zsh" }}

_print_running_script "$0"

set +euo pipefail

## Gemfile: {{ include "Gemfile.tmpl" | sha256sum }}

if ! command -v pkgx &> /dev/null; then
  _print_error "pkgx not installed"
  exit 1
fi

source <(pkgx --shellcode)
env +ruby-lang.org@latest +rubygems.org@latest

# We want our global gem versions to all be the latest,
# so unintall any existing global gems
if [ -f "$HOME/Gemfile.lock" ];then
  echo
  _print_info "removing Gemfile.lock"
  rm -f "$HOME/Gemfile.lock"
fi
if [ -d "$HOME/bin" ];then
  echo
  _print_info "cleaning up bundler binstubs"
  find "$HOME/bin" -type f -exec grep -q "This file was generated by Bundler" {} \; -delete
fi
if [ -d "$HOME/.gem" ];then
  echo
  _print_info "cleaning .gems"
  rm -rf "$HOME/.gems"
fi

# rubygems
echo
_print_prog gem "update --system"
gem update --system

echo
_print_info "using gem $(gem -v)"

echo
_print_prog gem "install bundler"
gem install --user-install --silent --no-document --bindir "$HOME/.gem/bin" bundler

# Install default gems
echo
_print_info "using $(bundle -v)"

echo
_print_prog bundle "install with: $(ruby -v)"
bundle install --gemfile="$HOME/Gemfile"

echo
_print_prog bundle "binstubs --all"
bundle binstubs --all --force --path="$HOME/.gem/bin"
_print_prog bundle "config --delete bin"
bundle config --delete bin

echo
_print_ok
