#! /usr/bin/env zsh

{{ template "printers.zsh" }}

_print_running_script "$0"

set +euo pipefail

echo
if [ -x /usr/local/bin/pkgx ]; then
  _print_updating "pkgx"
else
  _print_installing "pkgx"
fi

curl -LSsf https://github.com/pkgxdev/pkgx/releases/download/v1.5.0/pkgx-1.5.0+darwin+aarch64.tar.xz | sudo tar xz -C /usr/local/bin
pkgx --sync

echo
_print_info "using $(pkgx --version)"
# pkgx unload

# Remove binstubs not installed by pkgx
if [ -d "$HOME/.local/bin" ];then
  echo
  _print_running "cleaning up gem binstubs"
  find "$HOME/.local/bin" -type f -exec grep -q "This file was generated by RubyGems" {} \; -delete
fi

path[1,0]="$HOME/.local/bin"

# pkgx installs
echo
_print_prog pkgx "installing gnu.org/make@latest"
pkgx install gnu.org/make@latest

echo
_print_prog pkgx "installing openjdk.org@latest"
pkgx install openjdk.org@latest

echo
_print_prog pkgx "installing go.dev@latest"
pkgx install go.dev@latest

echo
_print_prog pkgx "installing nodejs.org@latest"
pkgx install nodejs.org@latest
pkgx node -v

echo
_print_prog pkgx "installing npmjs.com@latest"
pkgx install npmjs.com@latest

echo
_print_prog pkgx "installing pnpm.io@latest"
pkgx install pnpm.io@latest

# We want our global ruby and rubygems to be the
# latest, so uninstall any existing versions
pkgx uninstall ruby-lang.org
rm -rf "$HOME/.pkgx/ruby-lang.org"
pkgx uninstall rubygems.org
rm -rf "$HOME/.pkgx/rubygems.org"

echo
_print_prog pkgx "installing ruby-lang.org@latest"
pkgx install ruby-lang.org@latest
pkgx ruby -v


echo
if [ -f "/usr/local/bin/bundler" ]; then
  sudo -p "OSX password for %p:" rm -f /usr/local/bin/bundler
fi
if [ -f "/usr/local/bin/bundle" ]; then
  sudo -p "OSX password for %p:" rm -f /usr/local/bin/bundle
fi
_print_prog pkgx "installing rubygems.org@latest"
pkgx install rubygems.org@latest

echo
_print_ok
