#! /usr/bin/env zsh

{{ template "printers.zsh" }}

_print_running_script "$0"

set +euo pipefail

echo
if [ -x /usr/local/bin/pkgx ]; then
  _print_updating "pkgx"
else
  _print_installing "pkgx"
fi
curl -fsS https://pkgx.sh | sh
pkgx --sync

if ! command -v pkgx &> /dev/null; then
  _print_error "pkgx not installed"
  exit 1
fi

# Remove binstubs not installed by pkgx
if [ -d "$HOME/.local/bin" ];then
  _print_running "cleaning up gem binstubs"
  find "$HOME/.local/bin" -type f -exec grep -q "This file was generated by RubyGems" {} \; -delete
fi

path[1,0]="$HOME/.local/bin"

# pkgx installs
if [ ! -x "$HOME/.local/bin/make" ];then
  _print_prog pkgx "installing gnu.org/make@latest"
  pkgx install gnu.org/make@latest
fi

if [ ! -x "$HOME/.local/bin/java" ];then
  _print_prog pkgx "installing openjdk.org@latest"
  pkgx install openjdk.org@latest
fi

if [ ! -x "$HOME/.local/bin/go" ];then
  _print_prog pkgx "installing go.dev@latest"
  pkgx install go.dev@latest
fi

if [ ! -x "$HOME/.local/bin/node" ];then
  _print_prog pkgx "installing nodejs.org@latest"
  pkgx install nodejs.org@latest
  pkgx node -v
fi
if [ ! -x "$HOME/.local/bin/npm" ]; then
  _print_prog pkgx "installing npmjs.com@latest"
  pkgx install npmjs.com@latest
fi
if [ ! -x "$HOME/.local/bin/pnpm" ]; then
  _print_prog pkgx "installing pnpm.io@latest"
  pkgx install pnpm.io@latest
fi

if [ ! -x "$HOME/.local/bin/ruby" ]; then
  _print_prog pkgx "installing ruby-lang.org@latest"
  pkgx install ruby-lang.org@latest
  pkgx ruby -v
fi

if [ ! -x "$HOME/.local/bin/bundle" ]; then
  if [ -f "/usr/local/bin/bundler" ]; then
    sudo -p "OSX password for %p:" rm -f /usr/local/bin/bundler
  fi
  if [ -f "/usr/local/bin/bundle" ]; then
    sudo -p "OSX password for %p:" rm -f /usr/local/bin/bundle
  fi
  rm -f "$HOME/.local/bin/gem" "$HOME/.local/bin/bundler"

  _print_prog pkgx "installing rubygems.org@latest"
  pkgx install rubygems.org@latest
fi

echo
_print_ok
