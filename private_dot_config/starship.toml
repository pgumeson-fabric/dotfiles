command_timeout = 1500

[directory]
truncation_length = 10
truncate_to_repo = true # truncates directory to root folder if in github repo
truncation_symbol = "…/"

[cmd_duration]
min_time = 4
show_milliseconds = false
disabled = false
# style = "bold italic red"

[docker_context]
format = "via [$symbol$context]($style) "
style = "blue bold"
only_with_files = true
detect_files = ["docker-compose.yml", "docker-compose.yaml", "Dockerfile"]
detect_folders = []
disabled = false

[git_status]
format = '([\[$all_status$ahead_behind\]]($style) )'
stashed = "[${count}*](green)"
modified = "[${count}+](yellow)"
deleted =  "[${count}-](red)"
conflicted =  "[${count}~](red)"
ahead = "⇡${count}"
behind = "⇣${count}"
untracked = "[${count}?](blue)"
staged = "[${count}+](green)"

[git_state]
style =	"bold red"
format = "[$state( $progress_current/$progress_total) ]($style)"
rebase = "rebase"
merge = "merge"
revert = "revert"
cherry_pick = "cherry"
bisect = "bisect"
am = "am"
am_or_rebase = "am/rebase"

[python]
format = 'via [${symbol}python (${version} )(\($virtualenv\) )]($style)'
style = "bold yellow"
pyenv_prefix = "venv "
python_binary = ["./venv/bin/python", "python", "python3", "python2"]
detect_extensions = ["py"]
version_format = "v${raw}"

[nodejs]
format = "via [${symbol}Node $version](bold green) "
detect_files = ["package.json", ".node-version"]
detect_folders = ["node_modules"]
